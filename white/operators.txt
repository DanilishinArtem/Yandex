#include <iostream>
#include <string>
#include <iomanip>
#include <vector>
#include <algorithm>
using namespace std;

struct Duration{
    int hour;
    int min;
    Duration(int h = 0, int m = 0){
        int total = h * 60 + m;
        hour = total / 60;
        min = total % 60;
    }
};

ostream& operator<<(ostream& stream, const Duration& duration){
    stream << setfill('0');
    stream << setw(2) << duration.hour << ":" << setw(2) << duration.min;
    return stream;
};

istream& operator>>(istream& stream, Duration& duration){
    stream >> duration.hour;
    stream.ignore(1);
    stream >> duration.min;
    return stream;
}

Duration operator+(const Duration& duration1, const Duration& duration2){
    return Duration {duration1.hour + duration2.hour, duration1.min + duration2.min};
}

void PrintVector(const vector<Duration>& durations){
    for(auto duration : durations){
        cout << duration << " ";
    }
    cout << endl;
}

bool operator<(const Duration& duration1, const Duration& duration2){
    return duration1.hour < duration2.hour || (duration1.hour == duration2.hour && duration1.min < duration2.min);
}

int main(){
    stringstream dur_ss("01:55");
    Duration dur1;
    dur_ss >> dur1;
    Duration dur2 = {0, 5};
    Duration dur3 = dur1 + dur2;
    vector<Duration> durs = {dur3, dur1, dur2};
    PrintVector(durs);
    sort(begin(durs), end(durs));
    PrintVector(durs);
    return 0;    
}